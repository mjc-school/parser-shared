plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
}

group 'school.mjc'
archivesBaseName = "parser-shared"
version '1.0.0'

compileJava {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'com.github.javaparser', name: 'javaparser-core', version: '3.25.1'

    implementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.test {
    finalizedBy(tasks.jacocoTestReport)
}
tasks.jacocoTestReport {
    dependsOn(tasks.test)
}

tasks.javadocJar {
    classifier = 'javadoc'
    from javadoc
}

tasks.sourcesJar {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar, publishing.publications
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'Parser-shared'
                description = "A util library used to verify students' submitted code"
                url = 'https://mjc.school/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'danilaVaratyntsev'
                        name = 'Danila Varatyntsev'
                        email = 'danilaVaratyntsev@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git://github.com/mjc-school/parser-shared.git'
                    url = 'https://github.com/mjc-school/parser-shared'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("MAVEN_USERNAME")
                password = System.getenv("MAVEN_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}